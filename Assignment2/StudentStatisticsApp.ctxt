#BlueJ class context
comment0.target=StudentStatisticsApp
comment0.text=\r\n\ Class\ StudentStatisticsApp\ serves\ as\ the\ main\ application\ \r\n\ that\ allows\ users\ to\ interact\ with\ student\ data\ stored\ in\ a\ CSV\ file\ named\ "Assignment.csv.\r\n\ Users\ can\ choose\ from\ various\ options(a\ menu\ system)\ to\ view\ and\ analyze\ student\ performance\ statistics.\r\n\ It\ reads\ data\ from\ an\ external\ file,\ processes\ it,\ and\ provides\ meaningful\ statistics\ to\ the\ user.\r\n\ The\ class\ demonstrates\ common\ programming\ constructs\ such\ as\ file\ I/O,\ menu-driven\ interfaces,\ sorting\ algorithms,\ and\ data\ presentation.\r\n\ It\ is\ designed\ to\ be\ user-friendly\ and\ useful\ for\ educational\ or\ academic\ contexts\ where\ student\ performance\ analysis\ is\ required.\r\n
comment1.params=lastName\ firstName\ studentID\ marks
comment1.target=Student(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.util.List)
comment1.text=\r\n\ Student\ class\ has\ a\ constructor\ that\ initializes\ \r\n\ a\ Student\ object\ with\ the\ provided\ values\ for\ \r\n\ last\ name,\ first\ name,\ student\ ID,\ and\ a\ list\ of\ marks.\r\n
comment10.params=
comment10.target=void\ displayStudentsWithTotalMarks()
comment10.text=\r\n\ Method\ displayStudentsWithTotalMarks\ displays\ information\ \r\n\ about\ all\ students,\ including\ last\ name,\ first\ name,\ student\ ID,\ assignment\ marks,\ and\ total\ marks.\r\n
comment11.params=threshold
comment11.target=void\ displayStudentsBelowThreshold(float)
comment11.text=\r\n\ Method\ displayStudentsBelowThreshold\ displays\ information\ \r\n\ about\ students,\ whose\ total\ marks\ are\ below\ a\ specified\ threshold.\r\n
comment12.params=a\ b
comment12.target=int\ findMin(int,\ int)
comment12.text=\r\n\ \ \ \ \ \ \ Method\ findMin\ finds\ and\ returns\ the\ minimum\ of\ two\ integers\ a\ and\ b.\r\n
comment13.params=highest
comment13.target=void\ displayTopStudents(boolean)
comment13.text=\r\n\ Method\ displayTopStudents\ information\ about\ the\ top\ (highest\ or\ lowest)\ students\ \r\n\ based\ on\ their\ total\ marks.\ \r\nThe\ number\ of\ top\ students\ displayed\ is\ limited\ to\ five.
comment14.params=students
comment14.target=void\ bubbleSortHighest(java.util.List)
comment14.text=\r\n\ Method\ bubbleSortHighest\ implements\ the\ bubble\ sort\ algorithm\ \r\n\ to\ sort\ a\ list\ of\ students\ in\ descending\ order\ of\ total\ marks\ \r\n(highest\ to\ lowest).
comment15.params=students
comment15.target=void\ bubbleSortLowest(java.util.List)
comment15.text=\r\n\ Method\ bubbleSortLowest\ implements\ the\ bubble\ sort\ algorithm\ \r\n\ to\ sort\ a\ list\ of\ students\ in\ ascending\ order\ of\ total\ marks\ \r\n(lowest\ to\ highest).
comment2.params=
comment2.target=java.lang.String\ getLastName()
comment2.text=\r\n\ getLastName\ method\ returns\ the\ last\ name\ of\ the\ student.\r\n
comment3.params=
comment3.target=java.lang.String\ getFirstName()
comment3.text=\r\n\ getFirstName\ method\ returns\ the\ first\ name\ of\ the\ student.\r\n
comment4.params=
comment4.target=java.lang.String\ getStudentID()
comment4.text=\r\n\ getStudentID\ method\ returns\ student's\ unique\ identifier\ (ID).\r\n
comment5.params=
comment5.target=java.util.List\ getMarks()
comment5.text=\r\n\ List<Float>\ getMarks\ method\ returns\ the\ list\ of\ marks\ \r\n\ associated\ with\ the\ student's\ academic\ performance.\r\n
comment6.params=
comment6.target=float\ getTotalMark()
comment6.text=\r\n\ getTotalMark\ method\ calculates\ and\ returns\ the\ total\ marks\ \r\n\ for\ the\ student\ by\ summing\ up\ all\ the\ marks\ in\ the\ list\ of\ marks.\r\n
comment7.params=args
comment7.target=void\ main(java.lang.String[])
comment7.text=\r\n\ Below\ is\ the\ main\ method\ that\ welcomes\ user,\ \r\n\ and\ prompts\ user\ to\ take\ actions\ using\ a\ menu\ system,\r\n\ to\ choose\ various\ statistical\ operations,\ \r\n\ such\ as\ displaying\ students'\ total\ marks,\ \r\n\ displaying\ students\ below\ a\ certain\ threshold,\ \r\n\ displaying\ the\ top\ students\ with\ the\ highest\ or\ lowest\ total\ marks,\ \r\n\ and\ exiting\ the\ program.\r\n
comment8.params=fileName
comment8.target=void\ readFromFile(java.lang.String)
comment8.text=\r\n\ Method\ readFromFile\ reads\ student\ data\ from\ a\ CSV\ file\ and\ \r\n\ populates\ the\ students\ list.\r\n
comment9.params=
comment9.target=void\ displayMenu()
comment9.text=\r\n\ Method\ displayMenu\ displays\ a\ menu\ of\ options\ for\ the\ user\ to\ choose\ from,\ \r\n\ including\ displaying\ students'\ total\ marks,\ \r\n\ displaying\ students\ below\ a\ threshold,\ \r\n\ displaying\ top\ students,\ \r\n\ and\ exiting\ the\ program.\r\n
numComments=16
